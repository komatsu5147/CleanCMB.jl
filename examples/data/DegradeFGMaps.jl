# Degrade resolution of maps generated by "gen_pysm_maps.py"
using Healpix
using Statistics
using Printf
using FITSIO
ν = [27, 39, 93, 145, 225, 280, 350, 410, 850]  # in GHz
nν = length(ν)
nside = 128
for iν = 1:nν
    infile = @sprintf("map_equ_%03dghz_r8_nested_uKcmb.fits", ν[iν])
    fiin, fqin, fuin = (readMapFromFITS(infile, ic, Float32) for ic = 1:3)
    # Degrade and convert to RING order
    q = Map{Float32,RingOrder}(nside)
    u = Map{Float32,RingOrder}(nside)
    fact = Int((fiin.resolution.nside / nside)^2)
    for ip = 1:12*nside^2
        degrade = (ip-1)*fact+1:ip*fact
        jp = nest2ring(q.resolution, ip)
        q[jp] = mean(fqin[degrade])
        u[jp] = mean(fuin[degrade])
    end
    outfile = @sprintf("map_d1s1_equ_%03dghz_r7_uKcmb_qu.fits", ν[iν])
    extname = "Archive Map Table"
    typechar = "E"
    f = FITSIO.fits_create_file(outfile)
    FITSIO.fits_create_binary_tbl(
    f,
    0,
    [
        ("Stokes Q", "1$typechar", "uK, thermodynamic"),
        ("Stokes U", "1$typechar", "uK, thermodynamic"),
    ],
    extname,
    )
    saveToFITS(q, f, 1)
    saveToFITS(u, f, 2)
    FITSIO.fits_close_file(f)
end
